name: CI
on: [pull_request]
permissions:
  contents: read
jobs:
  go-versions:
    name: Check Go Versions
    runs-on: ubuntu-latest
    outputs: 
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - name: Checkout  
        uses: actions/checkout@v2

      - name: Set Go Versions
        uses: arnested/go-version-action@v1
        id: versions 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: go-versions
    strategy: 
      fail-fast: false
      matrix:
        go: ${{ fromJSON(needs.go-versions.outputs.matrix) }}
    name: "Build (${{ matrix.go }})"
    steps: 
      - name: Checkout
        uses: actions/checkout@v2
       
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Build
        run: go build ./...

      - name: Test
        run: go test -cover -race ./...

  lint:
    runs-on: ubuntu-latest
    name: "lint"
    continue-on-error: true
    steps: 
      - name: Checkout
        uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2 
        with:
          version: latest
          args: --disable-all -E govet
